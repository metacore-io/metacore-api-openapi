{
  "openapi": "3.0.0",
  "info": {
    "title": "Metacore IoT Object Storage API",
    "description": "Metacore Object Storage - IOT Core Services",
    "termsOfService": "http://api.teke.li/terms",
    "contact": {
      "name": "Yuregir TEKELI",
      "url": "https://www.metacore.io"
    },
    "license": {
      "name": "BSD",
      "url": "https://github.com/pyeve/eve-swagger/blob/master/LICENSE"
    },
    "version": "0.3"
  },
  "servers": [
    {
      "url": "https://api-gw-dev.service.metacore.io/api/v1/obs/"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "devices"
    },
    {
      "name": "device-hardwares"
    },
    {
      "name": "device-sensor-shadows"
    },
    {
      "name": "device-types"
    },
    {
      "name": "users"
    },
    {
      "name": "regions"
    },
    {
      "name": "region-hardwares"
    },
    {
      "name": "region-sensor-shadows"
    },
    {
      "name": "field_details"
    },
    {
      "name": "organizations"
    },
    {
      "name": "organization-details"
    },
    {
      "name": "tenants"
    },
    {
      "name": "hardwares"
    },
    {
      "name": "sensors"
    },
    {
      "name": "sensor-shadows"
    },
    {
      "name": "hardware-types"
    },
    {
      "name": "configs"
    },
    {
      "name": "measurables"
    },
    {
      "name": "search"
    },
    {
      "name": "signup"
    },
    {
      "name": "preferences"
    },
    {
      "name": "audit-logins"
    },
    {
      "name": "audit"
    },
    {
      "name": "sequences"
    },
    {
      "name": "automation"
    },
    {
      "name": "Oplog"
    }
  ],
  "paths": {
    "/audit": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Retrieves one or more audit",
        "operationId": "getaudit",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of audit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "audit"
        ],
        "summary": "Stores one or more audit.",
        "operationId": "postaudit",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/audit"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/audit/{auditId}": {
      "get": {
        "tags": [
          "audit"
        ],
        "summary": "Retrieves a audit document",
        "operationId": "getauditItem",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "audit document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/audit"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "audit"
        ],
        "summary": "Replaces a audit document",
        "operationId": "putauditItem",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/audit"
        },
        "responses": {
          "200": {
            "description": "audit document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "audit"
        ],
        "summary": "Deletes a audit document",
        "operationId": "deleteauditItem",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "audit document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "audit"
        ],
        "summary": "Updates a audit document",
        "operationId": "patchauditItem",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/audit"
        },
        "responses": {
          "200": {
            "description": "audit document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/audit_logins": {
      "get": {
        "tags": [
          "audit-logins"
        ],
        "summary": "Retrieves one or more audit_logins",
        "operationId": "getaudit_logins",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of audit_logins",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "audit-logins"
        ],
        "summary": "Stores one or more audit_logins.",
        "operationId": "postaudit_logins",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/audit-logins"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/audit_logins/{audit-loginsId}": {
      "get": {
        "tags": [
          "audit-logins"
        ],
        "summary": "Retrieves a audit-logins document",
        "operationId": "getaudit-loginsItem",
        "parameters": [
          {
            "name": "audit-loginsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "audit-logins document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/audit-logins"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "audit-logins"
        ],
        "summary": "Replaces a audit-logins document",
        "operationId": "putaudit-loginsItem",
        "parameters": [
          {
            "name": "audit-loginsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/audit-logins"
        },
        "responses": {
          "200": {
            "description": "audit-logins document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "audit-logins"
        ],
        "summary": "Deletes a audit-logins document",
        "operationId": "deleteaudit-loginsItem",
        "parameters": [
          {
            "name": "audit-loginsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "audit-logins document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "audit-logins"
        ],
        "summary": "Updates a audit-logins document",
        "operationId": "patchaudit-loginsItem",
        "parameters": [
          {
            "name": "audit-loginsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/audit-logins"
        },
        "responses": {
          "200": {
            "description": "audit-logins document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/automation": {
      "get": {
        "tags": [
          "automation"
        ],
        "summary": "Retrieves one or more automation",
        "operationId": "getautomation",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of automation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "automation"
        ],
        "summary": "Stores one or more automation.",
        "operationId": "postautomation",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/automation"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/automation/{automationId}": {
      "get": {
        "tags": [
          "automation"
        ],
        "summary": "Retrieves a automation document",
        "operationId": "getautomationItem",
        "parameters": [
          {
            "name": "automationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "automation document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/automation"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "automation"
        ],
        "summary": "Replaces a automation document",
        "operationId": "putautomationItem",
        "parameters": [
          {
            "name": "automationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/automation"
        },
        "responses": {
          "200": {
            "description": "automation document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "automation"
        ],
        "summary": "Deletes a automation document",
        "operationId": "deleteautomationItem",
        "parameters": [
          {
            "name": "automationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "automation document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "automation"
        ],
        "summary": "Updates a automation document",
        "operationId": "patchautomationItem",
        "parameters": [
          {
            "name": "automationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/automation"
        },
        "responses": {
          "200": {
            "description": "automation document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/configs": {
      "get": {
        "tags": [
          "configs"
        ],
        "summary": "Retrieves one or more configs",
        "operationId": "getconfigs",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of configs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "configs"
        ],
        "summary": "Stores one or more configs.",
        "operationId": "postconfigs",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/configs"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/configs/{configsId}": {
      "get": {
        "tags": [
          "configs"
        ],
        "summary": "Retrieves a configs document",
        "operationId": "getconfigsItem",
        "parameters": [
          {
            "name": "configsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "configs document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/configs"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "configs"
        ],
        "summary": "Replaces a configs document",
        "operationId": "putconfigsItem",
        "parameters": [
          {
            "name": "configsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/configs"
        },
        "responses": {
          "200": {
            "description": "configs document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "configs"
        ],
        "summary": "Deletes a configs document",
        "operationId": "deleteconfigsItem",
        "parameters": [
          {
            "name": "configsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "configs document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "configs"
        ],
        "summary": "Updates a configs document",
        "operationId": "patchconfigsItem",
        "parameters": [
          {
            "name": "configsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/configs"
        },
        "responses": {
          "200": {
            "description": "configs document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/device_types": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "Retrieves one or more device_types",
        "operationId": "getdevice_types",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of device_types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "device-types"
        ],
        "summary": "Stores one or more device_types.",
        "operationId": "postdevice_types",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/device-types"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/device_types/{device-typesId}": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "Retrieves a device-types document",
        "operationId": "getdevice-typesItem",
        "parameters": [
          {
            "name": "device-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "device-types document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device-types"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "device-types"
        ],
        "summary": "Replaces a device-types document",
        "operationId": "putdevice-typesItem",
        "parameters": [
          {
            "name": "device-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/device-types"
        },
        "responses": {
          "200": {
            "description": "device-types document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "device-types"
        ],
        "summary": "Deletes a device-types document",
        "operationId": "deletedevice-typesItem",
        "parameters": [
          {
            "name": "device-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "device-types document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "device-types"
        ],
        "summary": "Updates a device-types document",
        "operationId": "patchdevice-typesItem",
        "parameters": [
          {
            "name": "device-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/device-types"
        },
        "responses": {
          "200": {
            "description": "device-types document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Retrieves one or more devices",
        "operationId": "getdevices",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of devices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Stores one or more devices.",
        "operationId": "postdevices",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/devices"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{devicesId}": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Retrieves a devices document",
        "operationId": "getdevicesItem",
        "parameters": [
          {
            "name": "devicesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "devices document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/devices"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "devices"
        ],
        "summary": "Replaces a devices document",
        "operationId": "putdevicesItem",
        "parameters": [
          {
            "name": "devicesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/devices"
        },
        "responses": {
          "200": {
            "description": "devices document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "devices"
        ],
        "summary": "Deletes a devices document",
        "operationId": "deletedevicesItem",
        "parameters": [
          {
            "name": "devicesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "devices document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "devices"
        ],
        "summary": "Updates a devices document",
        "operationId": "patchdevicesItem",
        "parameters": [
          {
            "name": "devicesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/devices"
        },
        "responses": {
          "200": {
            "description": "devices document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/field_details": {
      "get": {
        "tags": [
          "field_details"
        ],
        "summary": "Retrieves one or more field_details",
        "operationId": "getfield_details",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of field_details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "field_details"
        ],
        "summary": "Stores one or more field_details.",
        "operationId": "postfield_details",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/field_details"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/field_details/{field_detailsId}": {
      "get": {
        "tags": [
          "field_details"
        ],
        "summary": "Retrieves a field_details document",
        "operationId": "getfield_detailsItem",
        "parameters": [
          {
            "name": "field_detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "field_details document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/field_details"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "field_details"
        ],
        "summary": "Replaces a field_details document",
        "operationId": "putfield_detailsItem",
        "parameters": [
          {
            "name": "field_detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/field_details"
        },
        "responses": {
          "200": {
            "description": "field_details document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "field_details"
        ],
        "summary": "Deletes a field_details document",
        "operationId": "deletefield_detailsItem",
        "parameters": [
          {
            "name": "field_detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "field_details document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "field_details"
        ],
        "summary": "Updates a field_details document",
        "operationId": "patchfield_detailsItem",
        "parameters": [
          {
            "name": "field_detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/field_details"
        },
        "responses": {
          "200": {
            "description": "field_details document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hardware_types": {
      "get": {
        "tags": [
          "hardware-types"
        ],
        "summary": "Retrieves one or more hardware_types",
        "operationId": "gethardware_types",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of hardware_types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hardware-types"
        ],
        "summary": "Stores one or more hardware_types.",
        "operationId": "posthardware_types",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/hardware-types"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hardware_types/{hardware-typesId}": {
      "get": {
        "tags": [
          "hardware-types"
        ],
        "summary": "Retrieves a hardware-types document",
        "operationId": "gethardware-typesItem",
        "parameters": [
          {
            "name": "hardware-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "hardware-types document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hardware-types"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "hardware-types"
        ],
        "summary": "Replaces a hardware-types document",
        "operationId": "puthardware-typesItem",
        "parameters": [
          {
            "name": "hardware-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/hardware-types"
        },
        "responses": {
          "200": {
            "description": "hardware-types document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hardware-types"
        ],
        "summary": "Deletes a hardware-types document",
        "operationId": "deletehardware-typesItem",
        "parameters": [
          {
            "name": "hardware-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "hardware-types document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hardware-types"
        ],
        "summary": "Updates a hardware-types document",
        "operationId": "patchhardware-typesItem",
        "parameters": [
          {
            "name": "hardware-typesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/hardware-types"
        },
        "responses": {
          "200": {
            "description": "hardware-types document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hardwares": {
      "get": {
        "tags": [
          "hardwares"
        ],
        "summary": "Retrieves one or more hardwares",
        "operationId": "gethardwares",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of hardwares",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hardwares"
        ],
        "summary": "Stores one or more hardwares.",
        "operationId": "posthardwares",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/hardwares"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hardwares/{hardwaresId}": {
      "get": {
        "tags": [
          "hardwares"
        ],
        "summary": "Retrieves a hardwares document",
        "operationId": "gethardwaresItem",
        "parameters": [
          {
            "name": "hardwaresId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "hardwares document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hardwares"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "hardwares"
        ],
        "summary": "Replaces a hardwares document",
        "operationId": "puthardwaresItem",
        "parameters": [
          {
            "name": "hardwaresId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/hardwares"
        },
        "responses": {
          "200": {
            "description": "hardwares document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hardwares"
        ],
        "summary": "Deletes a hardwares document",
        "operationId": "deletehardwaresItem",
        "parameters": [
          {
            "name": "hardwaresId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "hardwares document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hardwares"
        ],
        "summary": "Updates a hardwares document",
        "operationId": "patchhardwaresItem",
        "parameters": [
          {
            "name": "hardwaresId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/hardwares"
        },
        "responses": {
          "200": {
            "description": "hardwares document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/measurables": {
      "get": {
        "tags": [
          "measurables"
        ],
        "summary": "Retrieves one or more measurables",
        "operationId": "getmeasurables",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of measurables",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "measurables"
        ],
        "summary": "Stores one or more measurables.",
        "operationId": "postmeasurables",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/measurables"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/measurables/{measurablesId}": {
      "get": {
        "tags": [
          "measurables"
        ],
        "summary": "Retrieves a measurables document",
        "operationId": "getmeasurablesItem",
        "parameters": [
          {
            "name": "measurablesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "measurables document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/measurables"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "measurables"
        ],
        "summary": "Replaces a measurables document",
        "operationId": "putmeasurablesItem",
        "parameters": [
          {
            "name": "measurablesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/measurables"
        },
        "responses": {
          "200": {
            "description": "measurables document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "measurables"
        ],
        "summary": "Deletes a measurables document",
        "operationId": "deletemeasurablesItem",
        "parameters": [
          {
            "name": "measurablesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "measurables document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "measurables"
        ],
        "summary": "Updates a measurables document",
        "operationId": "patchmeasurablesItem",
        "parameters": [
          {
            "name": "measurablesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/measurables"
        },
        "responses": {
          "200": {
            "description": "measurables document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "automation"
        ],
        "summary": "Retrieves one or more notifications",
        "operationId": "getnotifications",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "automation"
        ],
        "summary": "Stores one or more notifications.",
        "operationId": "postnotifications",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/automation"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/oplog": {
      "get": {
        "tags": [
          "Oplog"
        ],
        "summary": "Retrieves one or more oplog",
        "operationId": "getoplog",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of oplog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/oplog/{oplogId}": {
      "get": {
        "tags": [
          "Oplog"
        ],
        "summary": "Retrieves a Oplog document",
        "operationId": "getOplogItem",
        "parameters": [
          {
            "name": "oplogId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Oplog document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oplog"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/org_details": {
      "get": {
        "tags": [
          "organization-details"
        ],
        "summary": "Retrieves one or more org_details",
        "operationId": "getorg_details",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of org_details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_11"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization-details"
        ],
        "summary": "Stores one or more org_details.",
        "operationId": "postorg_details",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/organization-details"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/org_details/{organization-detailsId}": {
      "get": {
        "tags": [
          "organization-details"
        ],
        "summary": "Retrieves a organization-details document",
        "operationId": "getorganization-detailsItem",
        "parameters": [
          {
            "name": "organization-detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "organization-details document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-details"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization-details"
        ],
        "summary": "Replaces a organization-details document",
        "operationId": "putorganization-detailsItem",
        "parameters": [
          {
            "name": "organization-detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/organization-details"
        },
        "responses": {
          "200": {
            "description": "organization-details document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organization-details"
        ],
        "summary": "Deletes a organization-details document",
        "operationId": "deleteorganization-detailsItem",
        "parameters": [
          {
            "name": "organization-detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "organization-details document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organization-details"
        ],
        "summary": "Updates a organization-details document",
        "operationId": "patchorganization-detailsItem",
        "parameters": [
          {
            "name": "organization-detailsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/organization-details"
        },
        "responses": {
          "200": {
            "description": "organization-details document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orgs": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Retrieves one or more orgs",
        "operationId": "getorgs",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of orgs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_12"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Stores one or more orgs.",
        "operationId": "postorgs",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/organizations"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{organizationsId}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Retrieves a organizations document",
        "operationId": "getorganizationsItem",
        "parameters": [
          {
            "name": "organizationsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "organizations document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organizations"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organizations"
        ],
        "summary": "Replaces a organizations document",
        "operationId": "putorganizationsItem",
        "parameters": [
          {
            "name": "organizationsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/organizations"
        },
        "responses": {
          "200": {
            "description": "organizations document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Deletes a organizations document",
        "operationId": "deleteorganizationsItem",
        "parameters": [
          {
            "name": "organizationsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "organizations document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "summary": "Updates a organizations document",
        "operationId": "patchorganizationsItem",
        "parameters": [
          {
            "name": "organizationsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/organizations"
        },
        "responses": {
          "200": {
            "description": "organizations document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/preferences": {
      "get": {
        "tags": [
          "preferences"
        ],
        "summary": "Retrieves one or more preferences",
        "operationId": "getpreferences",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of preferences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "preferences"
        ],
        "summary": "Stores one or more preferences.",
        "operationId": "postpreferences",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/preferences"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/preferences/{preferencesId}": {
      "get": {
        "tags": [
          "preferences"
        ],
        "summary": "Retrieves a preferences document",
        "operationId": "getpreferencesItem",
        "parameters": [
          {
            "name": "preferencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "preferences document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preferences"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "preferences"
        ],
        "summary": "Replaces a preferences document",
        "operationId": "putpreferencesItem",
        "parameters": [
          {
            "name": "preferencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/preferences"
        },
        "responses": {
          "200": {
            "description": "preferences document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "preferences"
        ],
        "summary": "Deletes a preferences document",
        "operationId": "deletepreferencesItem",
        "parameters": [
          {
            "name": "preferencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "preferences document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "preferences"
        ],
        "summary": "Updates a preferences document",
        "operationId": "patchpreferencesItem",
        "parameters": [
          {
            "name": "preferencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/preferences"
        },
        "responses": {
          "200": {
            "description": "preferences document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "regions"
        ],
        "summary": "Retrieves one or more regions",
        "operationId": "getregions",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of regions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "regions"
        ],
        "summary": "Stores one or more regions.",
        "operationId": "postregions",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/regions"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/regions/{regionsId}": {
      "get": {
        "tags": [
          "regions"
        ],
        "summary": "Retrieves a regions document",
        "operationId": "getregionsItem",
        "parameters": [
          {
            "name": "regionsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "regions document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/regions"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "regions"
        ],
        "summary": "Replaces a regions document",
        "operationId": "putregionsItem",
        "parameters": [
          {
            "name": "regionsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/regions"
        },
        "responses": {
          "200": {
            "description": "regions document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "regions"
        ],
        "summary": "Deletes a regions document",
        "operationId": "deleteregionsItem",
        "parameters": [
          {
            "name": "regionsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "regions document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "regions"
        ],
        "summary": "Updates a regions document",
        "operationId": "patchregionsItem",
        "parameters": [
          {
            "name": "regionsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/regions"
        },
        "responses": {
          "200": {
            "description": "regions document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/search_conf": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Stores one search.",
        "operationId": "postsearch_conf",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/search"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/search_conf/{searchId}": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Retrieves a search document",
        "operationId": "getsearchItem",
        "parameters": [
          {
            "name": "searchId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "search document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sensor_shadows": {
      "get": {
        "tags": [
          "sensor-shadows"
        ],
        "summary": "Retrieves one or more sensor_shadows",
        "operationId": "getsensor_shadows",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of sensor_shadows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_15"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sensor-shadows"
        ],
        "summary": "Stores one or more sensor_shadows.",
        "operationId": "postsensor_shadows",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/sensor-shadows"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sensor_shadows/{sensor-shadowsId}": {
      "get": {
        "tags": [
          "sensor-shadows"
        ],
        "summary": "Retrieves a sensor-shadows document",
        "operationId": "getsensor-shadowsItem",
        "parameters": [
          {
            "name": "sensor-shadowsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "sensor-shadows document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sensor-shadows"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sensor-shadows"
        ],
        "summary": "Replaces a sensor-shadows document",
        "operationId": "putsensor-shadowsItem",
        "parameters": [
          {
            "name": "sensor-shadowsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sensor-shadows"
        },
        "responses": {
          "200": {
            "description": "sensor-shadows document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sensor-shadows"
        ],
        "summary": "Deletes a sensor-shadows document",
        "operationId": "deletesensor-shadowsItem",
        "parameters": [
          {
            "name": "sensor-shadowsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "sensor-shadows document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "sensor-shadows"
        ],
        "summary": "Updates a sensor-shadows document",
        "operationId": "patchsensor-shadowsItem",
        "parameters": [
          {
            "name": "sensor-shadowsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sensor-shadows"
        },
        "responses": {
          "200": {
            "description": "sensor-shadows document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sensors": {
      "get": {
        "tags": [
          "sensors"
        ],
        "summary": "Retrieves one or more sensors",
        "operationId": "getsensors",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of sensors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_16"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sensors"
        ],
        "summary": "Stores one or more sensors.",
        "operationId": "postsensors",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/sensors"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sensors/{sensorsId}": {
      "get": {
        "tags": [
          "sensors"
        ],
        "summary": "Retrieves a sensors document",
        "operationId": "getsensorsItem",
        "parameters": [
          {
            "name": "sensorsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "sensors document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sensors"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sensors"
        ],
        "summary": "Replaces a sensors document",
        "operationId": "putsensorsItem",
        "parameters": [
          {
            "name": "sensorsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sensors"
        },
        "responses": {
          "200": {
            "description": "sensors document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sensors"
        ],
        "summary": "Deletes a sensors document",
        "operationId": "deletesensorsItem",
        "parameters": [
          {
            "name": "sensorsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "sensors document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "sensors"
        ],
        "summary": "Updates a sensors document",
        "operationId": "patchsensorsItem",
        "parameters": [
          {
            "name": "sensorsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sensors"
        },
        "responses": {
          "200": {
            "description": "sensors document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sequences": {
      "get": {
        "tags": [
          "sequences"
        ],
        "summary": "Retrieves one or more sequences",
        "operationId": "getsequences",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of sequences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_17"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sequences"
        ],
        "summary": "Stores one or more sequences.",
        "operationId": "postsequences",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/sequences"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sequences/{sequencesId}": {
      "get": {
        "tags": [
          "sequences"
        ],
        "summary": "Retrieves a sequences document",
        "operationId": "getsequencesItem",
        "parameters": [
          {
            "name": "sequencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "sequences document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sequences"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sequences"
        ],
        "summary": "Replaces a sequences document",
        "operationId": "putsequencesItem",
        "parameters": [
          {
            "name": "sequencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sequences"
        },
        "responses": {
          "200": {
            "description": "sequences document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sequences"
        ],
        "summary": "Deletes a sequences document",
        "operationId": "deletesequencesItem",
        "parameters": [
          {
            "name": "sequencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "sequences document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "sequences"
        ],
        "summary": "Updates a sequences document",
        "operationId": "patchsequencesItem",
        "parameters": [
          {
            "name": "sequencesId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sequences"
        },
        "responses": {
          "200": {
            "description": "sequences document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "signup"
        ],
        "summary": "Stores one signup.",
        "operationId": "postsignup",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/signup"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/signup/{signupId}": {
      "get": {
        "tags": [
          "signup"
        ],
        "summary": "Retrieves a signup document",
        "operationId": "getsignupItem",
        "parameters": [
          {
            "name": "signupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "signup document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signup"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "signup"
        ],
        "summary": "Replaces a signup document",
        "operationId": "putsignupItem",
        "parameters": [
          {
            "name": "signupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/signup"
        },
        "responses": {
          "200": {
            "description": "signup document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "signup"
        ],
        "summary": "Deletes a signup document",
        "operationId": "deletesignupItem",
        "parameters": [
          {
            "name": "signupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "signup document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "signup"
        ],
        "summary": "Updates a signup document",
        "operationId": "patchsignupItem",
        "parameters": [
          {
            "name": "signupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/signup"
        },
        "responses": {
          "200": {
            "description": "signup document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tenants": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "Retrieves one or more tenants",
        "operationId": "gettenants",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of tenants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_18"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tenants"
        ],
        "summary": "Stores one or more tenants.",
        "operationId": "posttenants",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/tenants"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantsId}": {
      "get": {
        "tags": [
          "tenants"
        ],
        "summary": "Retrieves a tenants document",
        "operationId": "gettenantsItem",
        "parameters": [
          {
            "name": "tenantsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "tenants document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tenants"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tenants"
        ],
        "summary": "Replaces a tenants document",
        "operationId": "puttenantsItem",
        "parameters": [
          {
            "name": "tenantsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/tenants"
        },
        "responses": {
          "200": {
            "description": "tenants document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tenants"
        ],
        "summary": "Deletes a tenants document",
        "operationId": "deletetenantsItem",
        "parameters": [
          {
            "name": "tenantsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "tenants document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tenants"
        ],
        "summary": "Updates a tenants document",
        "operationId": "patchtenantsItem",
        "parameters": [
          {
            "name": "tenantsId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/tenants"
        },
        "responses": {
          "200": {
            "description": "tenants document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieves one or more users",
        "operationId": "getusers",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "the filters query parameter (ex.: {\"number\": 10})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "the projections query parameter (ex.: {\"name\": 1})",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "the sort query parameter (ex.: \"city,-lastname\")",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the pages query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "the max results query parameter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Stores one or more users.",
        "operationId": "postusers",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/users"
        },
        "responses": {
          "201": {
            "description": "operation has been successful"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{usersId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieves a users document",
        "operationId": "getusersItem",
        "parameters": [
          {
            "name": "usersId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "users document fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Replaces a users document",
        "operationId": "putusersItem",
        "parameters": [
          {
            "name": "usersId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/users"
        },
        "responses": {
          "200": {
            "description": "users document replaced successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes a users document",
        "operationId": "deleteusersItem",
        "parameters": [
          {
            "name": "usersId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "users document deleted successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Updates a users document",
        "operationId": "patchusersItem",
        "parameters": [
          {
            "name": "usersId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Current value of the _etag field",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/users"
        },
        "responses": {
          "200": {
            "description": "users document updated successfully"
          },
          "default": {
            "description": "An error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "_error",
          "_status"
        ],
        "type": "object",
        "properties": {
          "_error": {
            "$ref": "#/components/schemas/Error__error"
          },
          "_status": {
            "type": "string",
            "example": "OK"
          }
        }
      },
      "Oplog": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "c": {},
          "i": {},
          "ip": {},
          "o": {},
          "r": {},
          "u": {}
        }
      },
      "audit": {
        "required": [
          "c",
          "ip",
          "o",
          "r"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "c": {
            "type": "object"
          },
          "ip": {
            "type": "string"
          },
          "o": {
            "type": "string"
          },
          "r": {
            "type": "string"
          },
          "u": {
            "$ref": "#/components/schemas/audit_u"
          }
        }
      },
      "audit-logins": {
        "required": [
          "agent",
          "date",
          "ip",
          "message",
          "user"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "agent": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "ip": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "user": {
            "type": "object"
          }
        }
      },
      "automation": {
        "required": [
          "condition",
          "device_id",
          "measurable_name",
          "name",
          "notification_type",
          "organizationId",
          "sensor_name",
          "value"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "condition": {
            "type": "string"
          },
          "device_id": {
            "type": "string"
          },
          "measurable_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notification_type": {
            "type": "string"
          },
          "notification_users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            }
          },
          "organizationId": {
            "type": "string",
            "format": "objectid"
          },
          "sensor_name": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "value": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "configs": {
        "required": [
          "config_object",
          "config_of",
          "config_type",
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/configs__id"
          },
          "config_object": {
            "type": "object"
          },
          "config_of": {
            "type": "string",
            "format": "objectid"
          },
          "config_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "configs__id": {
        "type": "string",
        "format": "objectid"
      },
      "device-hardwares": {
        "required": [
          "channel",
          "device_id",
          "hw_type",
          "name",
          "regionId"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "channel": {
            "type": "integer"
          },
          "child_hw": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "default": ""
          },
          "device_id": {
            "$ref": "#/components/schemas/devices__id"
          },
          "hw_type": {
            "$ref": "#/components/schemas/hardware-types__id"
          },
          "location": {
            "$ref": "#/components/schemas/devicehardwares_location"
          },
          "name": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "sensor_ref": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          }
        }
      },
      "device-sensor-shadows": {
        "required": [
          "channel",
          "config",
          "device_id",
          "measurement_name",
          "name",
          "sensor_type"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "channel": {
            "type": "integer"
          },
          "config": {
            "$ref": "#/components/schemas/configs__id"
          },
          "device_id": {
            "$ref": "#/components/schemas/devices__id"
          },
          "location": {
            "$ref": "#/components/schemas/devicehardwares_location"
          },
          "measurement_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "node": {
            "type": "integer",
            "default": 0
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "sensor_type": {
            "$ref": "#/components/schemas/sensors__id"
          }
        }
      },
      "device-types": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/device-types__id"
          },
          "capabilities": {
            "type": "object",
            "default": {}
          },
          "config": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "specs": {
            "$ref": "#/components/schemas/devicetypes_specs"
          }
        }
      },
      "device-types__id": {
        "type": "string",
        "format": "objectid"
      },
      "devices": {
        "required": [
          "_id",
          "name",
          "regionId",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/devices__id"
          },
          "hardwares": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          },
          "info": {
            "$ref": "#/components/schemas/devices_info"
          },
          "location": {
            "$ref": "#/components/schemas/devicehardwares_location"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "sensors": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          },
          "typeId": {
            "$ref": "#/components/schemas/device-types__id"
          }
        }
      },
      "devices__id": {
        "maxLength": 16,
        "minLength": 12,
        "type": "string"
      },
      "field_details": {
        "required": [
          "active_season",
          "regionId",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "active_season": {
            "type": "boolean"
          },
          "crop": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/field_details_operations"
            },
            "default": []
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "variety": {
            "type": "string"
          }
        }
      },
      "hardware-types": {
        "required": [
          "interface",
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/hardware-types__id"
          },
          "capabilities": {
            "type": "object",
            "default": {}
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "default": ""
          },
          "interface": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "hardware-types__id": {
        "type": "string",
        "format": "objectid"
      },
      "hardwares": {
        "required": [
          "channel",
          "device_id",
          "hw_type",
          "name",
          "regionId"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "channel": {
            "type": "integer"
          },
          "child_hw": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "default": ""
          },
          "device_id": {
            "$ref": "#/components/schemas/devices__id"
          },
          "hw_type": {
            "$ref": "#/components/schemas/hardware-types__id"
          },
          "location": {
            "$ref": "#/components/schemas/devicehardwares_location"
          },
          "name": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "sensor_ref": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          }
        }
      },
      "measurables": {
        "required": [
          "name",
          "unit",
          "unit_name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "name": {
            "type": "string"
          },
          "thresholds": {
            "type": "object"
          },
          "unit": {
            "type": "string"
          },
          "unit_name": {
            "type": "string"
          }
        }
      },
      "organization-details": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/organization-details__id"
          },
          "address": {
            "type": "string"
          },
          "balance": {
            "type": "integer"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "org_legal_name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "phoneNumber": {
            "type": "string"
          },
          "subscription_end": {
            "type": "string",
            "format": "date-time"
          },
          "subscription_start": {
            "type": "string",
            "format": "date-time"
          },
          "tax_number": {
            "type": "integer"
          },
          "tax_office": {
            "type": "string"
          }
        }
      },
      "organization-details__id": {
        "type": "string",
        "format": "objectid"
      },
      "organizations": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "description": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/organization-details__id"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          }
        }
      },
      "organizations__id": {
        "type": "string",
        "format": "objectid"
      },
      "preferences": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "dashboards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/preferences_dashboards"
            }
          },
          "userId": {
            "$ref": "#/components/schemas/users__id"
          }
        }
      },
      "region-hardwares": {
        "required": [
          "channel",
          "device_id",
          "hw_type",
          "name",
          "regionId"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "channel": {
            "type": "integer"
          },
          "child_hw": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "default": ""
          },
          "device_id": {
            "$ref": "#/components/schemas/devices__id"
          },
          "hw_type": {
            "$ref": "#/components/schemas/hardware-types__id"
          },
          "location": {
            "$ref": "#/components/schemas/devicehardwares_location"
          },
          "name": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "sensor_ref": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            },
            "default": []
          }
        }
      },
      "region-sensor-shadows": {
        "required": [
          "channel",
          "config",
          "device_id",
          "measurement_name",
          "name",
          "sensor_type"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "channel": {
            "type": "integer"
          },
          "config": {
            "$ref": "#/components/schemas/configs__id"
          },
          "device_id": {
            "$ref": "#/components/schemas/devices__id"
          },
          "location": {
            "$ref": "#/components/schemas/devicehardwares_location"
          },
          "measurement_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "node": {
            "type": "integer",
            "default": 0
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "sensor_type": {
            "$ref": "#/components/schemas/sensors__id"
          }
        }
      },
      "regions": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/regions__id"
          },
          "area": {
            "$ref": "#/components/schemas/regions_area"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/regions_location"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "soil_type": {
            "type": "string"
          }
        }
      },
      "regions__id": {
        "type": "string",
        "format": "objectid"
      },
      "respone_links": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/respone_links_parent"
          },
          "self": {
            "$ref": "#/components/schemas/respone_links_parent"
          }
        }
      },
      "respone_metadata": {
        "type": "object",
        "properties": {
          "max_results": {
            "type": "integer"
          },
          "page": {
            "type": "string"
          },
          "total": {
            "type": "integer"
          }
        }
      },
      "search": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "filter": {
            "$ref": "#/components/schemas/search_filter"
          },
          "keyword": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "range": {
            "$ref": "#/components/schemas/search_range"
          },
          "resource_type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "devices",
              "users",
              "regions",
              "hardwares",
              "audit",
              "audit_login"
            ]
          }
        }
      },
      "sensor-shadows": {
        "required": [
          "channel",
          "config",
          "device_id",
          "measurement_name",
          "name",
          "sensor_type"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "channel": {
            "type": "integer"
          },
          "config": {
            "$ref": "#/components/schemas/configs__id"
          },
          "device_id": {
            "$ref": "#/components/schemas/devices__id"
          },
          "location": {
            "$ref": "#/components/schemas/devicehardwares_location"
          },
          "measurement_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "node": {
            "type": "integer",
            "default": 0
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "sensor_type": {
            "$ref": "#/components/schemas/sensors__id"
          }
        }
      },
      "sensors": {
        "required": [
          "measurement_name",
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/sensors__id"
          },
          "interface": {
            "type": "string"
          },
          "measurement_name": {
            "type": "string"
          },
          "measures": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            }
          },
          "name": {
            "type": "string"
          },
          "sensor_brand": {
            "type": "string"
          },
          "sensor_model": {
            "type": "string"
          }
        }
      },
      "sensors__id": {
        "type": "string",
        "format": "objectid"
      },
      "sequences": {
        "required": [
          "commands",
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/sequences__id"
          },
          "commands": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          }
        }
      },
      "sequences__id": {
        "type": "string",
        "format": "objectid"
      },
      "signup": {
        "required": [
          "email",
          "firstname",
          "lastname",
          "orgname"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "email": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": false
          },
          "lastname": {
            "type": "string"
          },
          "orgname": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "default": "admin"
          }
        }
      },
      "tenants": {
        "required": [
          "name",
          "subscriptionKey",
          "subscriptionLimit"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "subscriptionKey": {
            "type": "string"
          },
          "subscriptionLimit": {
            "type": "integer"
          }
        }
      },
      "users": {
        "required": [
          "email",
          "firstname",
          "lastname"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/users__id"
          },
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": false
          },
          "lastname": {
            "type": "string"
          },
          "mobilePhoneNumber": {
            "type": "integer"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "profile_pic": {
            "type": "string",
            "format": "base64"
          },
          "regionId": {
            "$ref": "#/components/schemas/regions__id"
          },
          "role": {
            "type": "string",
            "default": "user"
          }
        }
      },
      "users__id": {
        "type": "string",
        "format": "objectid"
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/audit"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/audit-logins"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/automation"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/configs"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/device-types"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/devices"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/field_details"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/hardware-types"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_8": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/hardwares"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_9": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/measurables"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_10": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Oplog"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_11": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organization-details"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_12": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organizations"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_13": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/preferences"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_14": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/regions"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_15": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sensor-shadows"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_16": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sensors"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_17": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sequences"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_18": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tenants"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "inline_response_200_19": {
        "type": "object",
        "properties": {
          "_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/users"
            }
          },
          "_meta": {
            "$ref": "#/components/schemas/respone_metadata"
          }
        }
      },
      "Error__error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "audit_u": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "email": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "devicehardwares_location": {
        "required": [
          "coordinates",
          "type"
        ],
        "type": "object",
        "properties": {
          "coordinates": {
            "maxItems": 2,
            "minItems": 2,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "Point"
            ]
          }
        }
      },
      "devicetypes_specs": {
        "type": "object",
        "properties": {
          "battery_operated": {
            "type": "boolean",
            "default": false
          },
          "lora_mac": {
            "type": "string"
          },
          "mains_power": {
            "type": "boolean",
            "default": false
          },
          "manufacturer": {
            "type": "string"
          },
          "network": {
            "type": "string",
            "default": "unknown"
          },
          "solar_panel": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "devices_info": {
        "type": "object",
        "properties": {
          "hw_version": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "serial_no": {
            "type": "string"
          },
          "sw_version": {
            "type": "string"
          }
        }
      },
      "field_details_operations": {
        "type": "object",
        "properties": {
          "application": {
            "type": "string"
          },
          "cost": {
            "type": "number",
            "format": "float"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "preferences_sensors": {
        "required": [
          "deviceId",
          "name",
          "uid"
        ],
        "type": "object",
        "properties": {
          "channel": {
            "type": "integer",
            "default": 0
          },
          "color": {
            "type": "string"
          },
          "deviceId": {
            "$ref": "#/components/schemas/devices__id"
          },
          "measures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "preferences_widgets": {
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "cities": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "deviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sensors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/preferences_sensors"
            }
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "preferences_dashboards": {
        "required": [
          "name",
          "organizationId",
          "uid"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "organizationId": {
            "$ref": "#/components/schemas/organizations__id"
          },
          "uid": {
            "type": "string"
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/preferences_widgets"
            }
          }
        }
      },
      "regions_area": {
        "type": "object",
        "properties": {
          "legal": {
            "type": "number",
            "format": "float"
          },
          "on_map": {
            "type": "number",
            "format": "float"
          },
          "tillable": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "regions_location": {
        "required": [
          "coordinates",
          "type"
        ],
        "type": "object",
        "properties": {
          "coordinates": {
            "type": "array",
            "items": {
              "maxItems": 2,
              "minItems": 2,
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "Polygon"
            ]
          }
        }
      },
      "respone_links_parent": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "search_filter": {
        "type": "object",
        "properties": {
          "device_status": {
            "type": "boolean"
          },
          "device_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid"
            }
          },
          "hw_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "search_range": {
        "type": "object",
        "properties": {
          "end_time": {
            "type": "string",
            "format": "date-time"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "An error message",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters": {
      "If-Match": {
        "name": "If-Match",
        "in": "header",
        "description": "Current value of the _etag field",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "Oplog__id": {
        "name": "oplogId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "audit-logins__id": {
        "name": "audit-loginsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "audit__id": {
        "name": "auditId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "automation__id": {
        "name": "automationId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "configs__id": {
        "name": "configsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "device-hardwares__id": {
        "name": "device-hardwaresId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "device-sensor-shadows__id": {
        "name": "device-sensor-shadowsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "device-types__id": {
        "name": "device-typesId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "devices__id": {
        "name": "devicesId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "field_details__id": {
        "name": "field_detailsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "hardware-types__id": {
        "name": "hardware-typesId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "hardwares__id": {
        "name": "hardwaresId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "measurables__id": {
        "name": "measurablesId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "organization-details__id": {
        "name": "organization-detailsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "organizations__id": {
        "name": "organizationsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "preferences__id": {
        "name": "preferencesId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "query__max_results": {
        "name": "max_results",
        "in": "query",
        "description": "the max results query parameter",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "example": 25
        }
      },
      "query__page": {
        "name": "page",
        "in": "query",
        "description": "the pages query parameter",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "example": 1
        }
      },
      "query__projections": {
        "name": "projection",
        "in": "query",
        "description": "the projections query parameter (ex.: {\"name\": 1})",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "query__sort": {
        "name": "sort",
        "in": "query",
        "description": "the sort query parameter (ex.: \"city,-lastname\")",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "query__where": {
        "name": "where",
        "in": "query",
        "description": "the filters query parameter (ex.: {\"number\": 10})",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "region-hardwares__id": {
        "name": "region-hardwaresId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "region-sensor-shadows__id": {
        "name": "region-sensor-shadowsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "regions__id": {
        "name": "regionsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "search__id": {
        "name": "searchId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "sensor-shadows__id": {
        "name": "sensor-shadowsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "sensors__id": {
        "name": "sensorsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "sequences__id": {
        "name": "sequencesId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "signup__id": {
        "name": "signupId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "tenants__id": {
        "name": "tenantsId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      },
      "users__id": {
        "name": "usersId",
        "in": "path",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": ""
      }
    },
    "examples": {
      "Oplog": {
        "summary": "An example {0} document.",
        "description": "An example for Oplog documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "audit": {
        "summary": "An example {0} document.",
        "description": "An example for audit documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "audit-logins": {
        "summary": "An example {0} document.",
        "description": "An example for audit-logins documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "automation": {
        "summary": "An example {0} document.",
        "description": "An example for automation documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "configs": {
        "summary": "An example {0} document.",
        "description": "An example for configs documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "device-hardwares": {
        "summary": "An example {0} document.",
        "description": "An example for device-hardwares documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "device-sensor-shadows": {
        "summary": "An example {0} document.",
        "description": "An example for device-sensor-shadows documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "device-types": {
        "summary": "An example {0} document.",
        "description": "An example for device-types documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "devices": {
        "summary": "An example {0} document.",
        "description": "An example for devices documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "field_details": {
        "summary": "An example {0} document.",
        "description": "An example for field_details documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "hardware-types": {
        "summary": "An example {0} document.",
        "description": "An example for hardware-types documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "hardwares": {
        "summary": "An example {0} document.",
        "description": "An example for hardwares documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "measurables": {
        "summary": "An example {0} document.",
        "description": "An example for measurables documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "organization-details": {
        "summary": "An example {0} document.",
        "description": "An example for organization-details documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "organizations": {
        "summary": "An example {0} document.",
        "description": "An example for organizations documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "preferences": {
        "summary": "An example {0} document.",
        "description": "An example for preferences documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "region-hardwares": {
        "summary": "An example {0} document.",
        "description": "An example for region-hardwares documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "region-sensor-shadows": {
        "summary": "An example {0} document.",
        "description": "An example for region-sensor-shadows documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "regions": {
        "summary": "An example {0} document.",
        "description": "An example for regions documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "search": {
        "summary": "An example {0} document.",
        "description": "An example for search documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "sensor-shadows": {
        "summary": "An example {0} document.",
        "description": "An example for sensor-shadows documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "sensors": {
        "summary": "An example {0} document.",
        "description": "An example for sensors documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "sequences": {
        "summary": "An example {0} document.",
        "description": "An example for sequences documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "signup": {
        "summary": "An example {0} document.",
        "description": "An example for signup documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "tenants": {
        "summary": "An example {0} document.",
        "description": "An example for tenants documents request bodies. Used in POST, PUT, PATCH methods."
      },
      "users": {
        "summary": "An example {0} document.",
        "description": "An example for users documents request bodies. Used in POST, PUT, PATCH methods."
      }
    },
    "requestBodies": {
      "Oplog": {
        "description": "A Oplog or list of Oplog documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Oplog"
            },
            "examples": {
              "Oplog": {
                "$ref": "#/components/examples/Oplog"
              }
            }
          }
        },
        "required": true
      },
      "audit": {
        "description": "A audit or list of audit documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/audit"
            },
            "examples": {
              "audit": {
                "$ref": "#/components/examples/audit"
              }
            }
          }
        },
        "required": true
      },
      "audit-logins": {
        "description": "A audit-logins or list of audit-logins documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/audit-logins"
            },
            "examples": {
              "audit-logins": {
                "$ref": "#/components/examples/audit-logins"
              }
            }
          }
        },
        "required": true
      },
      "automation": {
        "description": "A automation or list of automation documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/automation"
            },
            "examples": {
              "automation": {
                "$ref": "#/components/examples/automation"
              }
            }
          }
        },
        "required": true
      },
      "configs": {
        "description": "A configs or list of configs documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/configs"
            },
            "examples": {
              "configs": {
                "$ref": "#/components/examples/configs"
              }
            }
          }
        },
        "required": true
      },
      "device-hardwares": {
        "description": "A device-hardwares or list of device-hardwares documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/device-hardwares"
            },
            "examples": {
              "device-hardwares": {
                "$ref": "#/components/examples/device-hardwares"
              }
            }
          }
        },
        "required": true
      },
      "device-sensor-shadows": {
        "description": "A device-sensor-shadows or list of device-sensor-shadows documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/device-sensor-shadows"
            },
            "examples": {
              "device-sensor-shadows": {
                "$ref": "#/components/examples/device-sensor-shadows"
              }
            }
          }
        },
        "required": true
      },
      "device-types": {
        "description": "A device-types or list of device-types documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/device-types"
            },
            "examples": {
              "device-types": {
                "$ref": "#/components/examples/device-types"
              }
            }
          }
        },
        "required": true
      },
      "devices": {
        "description": "A devices or list of devices documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/devices"
            },
            "examples": {
              "devices": {
                "$ref": "#/components/examples/devices"
              }
            }
          }
        },
        "required": true
      },
      "field_details": {
        "description": "A field_details or list of field_details documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/field_details"
            },
            "examples": {
              "field_details": {
                "$ref": "#/components/examples/field_details"
              }
            }
          }
        },
        "required": true
      },
      "hardware-types": {
        "description": "A hardware-types or list of hardware-types documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/hardware-types"
            },
            "examples": {
              "hardware-types": {
                "$ref": "#/components/examples/hardware-types"
              }
            }
          }
        },
        "required": true
      },
      "hardwares": {
        "description": "A hardwares or list of hardwares documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/hardwares"
            },
            "examples": {
              "hardwares": {
                "$ref": "#/components/examples/hardwares"
              }
            }
          }
        },
        "required": true
      },
      "measurables": {
        "description": "A measurables or list of measurables documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/measurables"
            },
            "examples": {
              "measurables": {
                "$ref": "#/components/examples/measurables"
              }
            }
          }
        },
        "required": true
      },
      "organization-details": {
        "description": "A organization-details or list of organization-details documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/organization-details"
            },
            "examples": {
              "organization-details": {
                "$ref": "#/components/examples/organization-details"
              }
            }
          }
        },
        "required": true
      },
      "organizations": {
        "description": "A organizations or list of organizations documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/organizations"
            },
            "examples": {
              "organizations": {
                "$ref": "#/components/examples/organizations"
              }
            }
          }
        },
        "required": true
      },
      "preferences": {
        "description": "A preferences or list of preferences documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/preferences"
            },
            "examples": {
              "preferences": {
                "$ref": "#/components/examples/preferences"
              }
            }
          }
        },
        "required": true
      },
      "region-hardwares": {
        "description": "A region-hardwares or list of region-hardwares documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/region-hardwares"
            },
            "examples": {
              "region-hardwares": {
                "$ref": "#/components/examples/region-hardwares"
              }
            }
          }
        },
        "required": true
      },
      "region-sensor-shadows": {
        "description": "A region-sensor-shadows or list of region-sensor-shadows documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/region-sensor-shadows"
            },
            "examples": {
              "region-sensor-shadows": {
                "$ref": "#/components/examples/region-sensor-shadows"
              }
            }
          }
        },
        "required": true
      },
      "regions": {
        "description": "A regions or list of regions documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/regions"
            },
            "examples": {
              "regions": {
                "$ref": "#/components/examples/regions"
              }
            }
          }
        },
        "required": true
      },
      "search": {
        "description": "A search document.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/search"
            },
            "examples": {
              "search": {
                "$ref": "#/components/examples/search"
              }
            }
          }
        },
        "required": true
      },
      "sensor-shadows": {
        "description": "A sensor-shadows or list of sensor-shadows documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/sensor-shadows"
            },
            "examples": {
              "sensor-shadows": {
                "$ref": "#/components/examples/sensor-shadows"
              }
            }
          }
        },
        "required": true
      },
      "sensors": {
        "description": "A sensors or list of sensors documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/sensors"
            },
            "examples": {
              "sensors": {
                "$ref": "#/components/examples/sensors"
              }
            }
          }
        },
        "required": true
      },
      "sequences": {
        "description": "A sequences or list of sequences documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/sequences"
            },
            "examples": {
              "sequences": {
                "$ref": "#/components/examples/sequences"
              }
            }
          }
        },
        "required": true
      },
      "signup": {
        "description": "A signup document.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/signup"
            },
            "examples": {
              "signup": {
                "$ref": "#/components/examples/signup"
              }
            }
          }
        },
        "required": true
      },
      "tenants": {
        "description": "A tenants or list of tenants documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tenants"
            },
            "examples": {
              "tenants": {
                "$ref": "#/components/examples/tenants"
              }
            }
          }
        },
        "required": true
      },
      "users": {
        "description": "A users or list of users documents",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/users"
            },
            "examples": {
              "users": {
                "$ref": "#/components/examples/users"
              }
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  }
}
